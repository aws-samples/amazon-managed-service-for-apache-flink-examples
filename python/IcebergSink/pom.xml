<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.amazonaws</groupId>
    <artifactId>managed-flink-pyfink-iceberg-sink-example</artifactId>
    <version>1.0.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <buildDirectory>${project.basedir}/target</buildDirectory>
        <zip.finalName>${project.name}-${project.version}</zip.finalName>
        <jar.finalName>pyflink-dependencies</jar.finalName>

        <target.java.version>11</target.java.version>
        <maven.compiler.source>${target.java.version}</maven.compiler.source>
        <maven.compiler.target>${target.java.version}</maven.compiler.target>

        <flink.version>1.20.0</flink.version>
        <flink.major.version>1.20</flink.major.version>
        <iceberg.version>1.9.0</iceberg.version>
        <awssdk.version>2.31.48</awssdk.version>
        <kda.runtime.version>1.2.0</kda.runtime.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${awssdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Specify any jar dependencies (e.g. connectors) required -->
    <dependencies>
        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/glue -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>glue</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/s3 -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.iceberg</groupId>
            <artifactId>iceberg-flink-runtime-${flink.major.version}</artifactId>
            <version>${iceberg.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.iceberg</groupId>
            <artifactId>iceberg-aws-bundle</artifactId>
            <version>${iceberg.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-s3-fs-hadoop</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-hadoop-fs</artifactId>
            <version>${flink.version}</version>
        </dependency>
    </dependencies>

    <build>
        <directory>${buildDirectory}</directory>
        <plugins>
            <!-- Java Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${target.java.version}</source>
                    <target>${target.java.version}</target>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin to create the "fat-jar" with all required dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- This configuration prevents the plugin from generating the "original" jar file -->
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>

                            <artifactSet>
                                <excludes>
                                    <exclude>org.apache.flink:force-shading</exclude>
                                    <exclude>com.google.code.findbugs:jsr305</exclude>
                                    <exclude>org.slf4j:*</exclude>
                                    <exclude>log4j:*</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <!-- Do not copy the signatures in the META-INF folder.
                                    Otherwise, this might cause SecurityExceptions when using the JAR. -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <!-- Block Multi-Release JAR Classes.
                                        If Flink job runs on an older Java runtime (e.g., Java 11/17), 
                                        classes compiled for Java 21/22 would cause UnsupportedClassVersionError.
                                        Example error: 
                                        "java.lang.UnsupportedClassVersionError: Unsupported major.minor version 65"
                                        -->
                                        <exclude>META-INF/versions/21/**</exclude>
                                        <exclude>META-INF/versions/22/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers combine.children="append">
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                </transformer>
                            </transformers>
                            <!-- Renames (relocates) Hadoop/Flink classes to avoid version conflicts when deploying to environments with pre-existing dependencies.
                            This prevents ClassNotFoundException or NoSuchMethodError issues caused by conflicting library versions in the runtime classpath.-->
                            <relocations>
                                <relocation>
                                    <pattern>org.apache.hadoop.conf</pattern>
                                    <shadedPattern>shaded.org.apache.hadoop.conf</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.flink.runtime.util.HadoopUtils</pattern>
                                    <shadedPattern>shadow.org.apache.flink.runtime.util.HadoopUtils</shadedPattern>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Assembly Plugin to create the zip file containing the Python code and the fat-jar -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>assembly/assembly.xml</descriptor>
                    </descriptors>
                    <finalName>${zip.finalName}</finalName>
                    <outputDirectory>${buildDirectory}</outputDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven jar plugin controls the  name of the generated jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <finalName>${jar.finalName}</finalName>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>