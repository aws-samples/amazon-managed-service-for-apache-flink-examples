Description: Simple KDA Flink application
Parameters:
  ApplicationName:
    Type: String
  FlinkRuntimeEnvironment:
    Type: String
    Default: FLINK-1_18
  CodeBucketArn:
    Type: String
  CodeKey:
    Type: String
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  SubnetOne:
    Type: AWS::EC2::Subnet::Id
  SubnetTwo:
    Type: AWS::EC2::Subnet::Id
  SubnetThree:
    Type: AWS::EC2::Subnet::Id
  Parallelism:
    Type: String
    Default: 1
  InputStreamName:
    Type: String
  OutputStreamName:
    Type: String
  Region:
    Type: String
  SourceType:
    Type: String


Resources:
  FlinkApplication:
    Type: AWS::KinesisAnalyticsV2::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      RuntimeEnvironment: !Ref FlinkRuntimeEnvironment
      ServiceExecutionRole: !GetAtt FlinkApplicationServiceExecutionRole.Arn
      ApplicationConfiguration:
        ApplicationCodeConfiguration:
          CodeContent:
            S3ContentLocation:
              BucketARN: !Ref CodeBucketArn
              FileKey: !Ref CodeKey
          CodeContentType: 'ZIPFILE'
        VpcConfigurations:
          - SecurityGroupIds:
              - !Ref SecurityGroup
            SubnetIds:
              - !Ref SubnetOne
              - !Ref SubnetTwo
              - !Ref SubnetThree
        ApplicationSnapshotConfiguration:
          SnapshotsEnabled: false
        EnvironmentProperties:
          PropertyGroups:
            - PropertyGroupId: FlinkApplicationProperties
              PropertyMap:
                kinesis.source.stream: !Ref InputStreamName
                kinesis.sink.stream: !Ref OutputStreamName
                kinesis.region: !Ref Region
                kinesis.source.type: !Ref SourceType
        FlinkApplicationConfiguration:
          MonitoringConfiguration:
            ConfigurationType: CUSTOM
            LogLevel: INFO
            MetricsLevel: APPLICATION
          ParallelismConfiguration:
            ConfigurationType: CUSTOM
            AutoScalingEnabled: true
            Parallelism: !Ref Parallelism
            ParallelismPerKPU: 1

  FlinkApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/amazon-msf/${ApplicationName}"

  FlinkApplicationLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref FlinkApplicationLogGroup
      LogStreamName: "amazon-msf-log-stream"

  FlinkApplicationLoggingOption:
    Type: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption
    Properties:
      ApplicationName:
        Ref: FlinkApplication
      CloudWatchLoggingOption:
        LogStreamARN:
          Fn::Join:
            - ":"
            - - arn:aws:logs
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - log-group
              - Ref: FlinkApplicationLogGroup
              - log-stream
              - amazon-msf-log-stream

  KinesisIAMManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for Kinesis access
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
            Resource: !Sub "arn:aws:kinesis:${Region}:${AWS::AccountId}:stream/${InputStreamName}"
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:PutRecord
              - kinesis:PutRecords
            Resource: !Sub "arn:aws:kinesis:${Region}:${AWS::AccountId}:stream/${OutputStreamName}"
  FlinkApplicationServiceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref KinesisIAMManagedPolicy
      Policies:
        - PolicyName: ListCloudwatchLogGroups
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource:  "*"
        - PolicyName: VPCReadOnlyPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeDhcpOptions
                Resource: "*"
        - PolicyName: ENIReadWritePermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:CreateNetworkInterfacePermission
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource:
                  - "*"
        - PolicyName: s3-code-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "${CodeBucketArn}/${CodeKey}"